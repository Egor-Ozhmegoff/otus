version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  nginx:
    image: nginx:latest
    depends_on:
      - apache_1
      - apache_2
      - apache_3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/load_balance.conf:/etc/nginx/conf.d/default.conf:ro
      - /nginx/var/log/nginx/:/var/log/nginx/:rw
    ports:
      - 80:80
    extra_hosts:
      - "host.docker.internal:host-gateway"

  apache_1:
    image: "httpd:bookworm"
    volumes:
      - ./apache/site1/:/usr/local/apache2/htdocs/

  apache_2:
    image: "httpd:bookworm"
    volumes:
      - ./apache/site2/:/usr/local/apache2/htdocs/

  apache_3:
    image: "httpd:bookworm"
    volumes:
      - ./apache/site3/:/usr/local/apache2/htdocs/

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
      - mysql_master
      - runner
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_INSTALL_PLUGINS=vonage-status-panel
    env_file:
      - ./grafana/config.monitoring

  mysql_master:
    image: mysql:8.0
    volumes:
      - ./mysql/master/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    env_file:
      - ./mysql/mysql.config

  mysql_slave:
    image: mysql:8.0
    volumes:
      - ./mysql/slave/mysql.conf.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    env_file:
      - ./mysql/mysql.config

  runner:
    image: "otus/ubuntu"
    build:
      context: "./runner"
      dockerfile: "Dockerfile"
    restart: on-failure
    command: ["sleep", "infinity", "/opt/mysql/mysql_cluster_setup.sh"]
    depends_on:
      - mysql_master
      - mysql_slave